@using SmartCVFilter.API.DTOs
@using SmartCVFilter.API.ViewModels
@model ApplicantIndexViewModel
@{
    ViewData["Title"] = "Applicant Management";
    Layout = "_Layout";
}

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
            <div>
                <h1 class="h2 mb-1 text-dark">
                    <i class="bi bi-people text-primary me-2"></i>
                    Applicant Management
                </h1>
                <p class="text-muted mb-0">Manage and review candidate applications</p>
            </div>
            <div class="btn-toolbar mb-2 mb-md-0">
                @if (Model?.SelectedJobPostId.HasValue == true)
                {
                    <div class="btn-group me-2">
                        <a href="@Url.Action("Create", "ApplicantsMvc", new { jobPostId = Model.SelectedJobPostId })"
                            class="btn btn-primary">
                            <i class="bi bi-person-plus me-1"></i>
                            Add Applicant
                        </a>
                        <button type="button" class="btn btn-success" data-bs-toggle="modal"
                            data-bs-target="#screeningModal">
                            <i class="bi bi-search me-1"></i>
                            Start AI Screening
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Job Post Selection -->
@if (Model?.SelectedJobPostId.HasValue != true)
{
    <div class="row mb-5">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-white border-0 py-4">
                    <h5 class="mb-1 fw-bold text-dark">
                        <i class="bi bi-briefcase text-primary me-2"></i>
                        Select Job Post
                    </h5>
                    <p class="text-muted mb-0">Choose a job post to manage its applicants</p>
                </div>
                <div class="card-body p-4">
                    @if (Model?.JobPosts != null && Model.JobPosts.Count > 0)
                    {
                        <div class="row g-4">
                            @foreach (var jobPost in Model.JobPosts)
                            {
                                <div class="col-md-6 col-lg-4">
                                    <div class="card border-0 shadow-sm h-100 hover-card">
                                        <div class="card-body p-4">
                                            <h6 class="card-title fw-bold text-dark mb-2">@jobPost.Title</h6>
                                            <p class="card-text text-muted mb-3">
                                                <i class="bi bi-geo-alt me-1"></i>@jobPost.Location â€¢ @jobPost.Department
                                            </p>
                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                <span
                                                    class="badge @(jobPost.Status == "Active" ? "bg-success" : "bg-secondary") px-3 py-2">
                                                    <i class="bi bi-circle-fill me-1" style="font-size: 0.5rem;"></i>
                                                    @jobPost.Status
                                                </span>
                                                <span class="badge bg-info px-3 py-2">
                                                    <i class="bi bi-people me-1"></i>
                                                    @jobPost.ApplicantCount
                                                </span>
                                            </div>
                                        </div>
                                        <div class="card-footer bg-transparent border-0 p-4 pt-0">
                                            <a href="@Url.Action("Index", new { jobPostId = jobPost.Id })"
                                                class="btn btn-primary w-100">
                                                <i class="bi bi-people me-2"></i>
                                                Manage Applicants
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="bi bi-briefcase display-1 text-muted opacity-50"></i>
                            </div>
                            <h5 class="text-muted mb-3">No Job Posts Found</h5>
                            <p class="text-muted mb-4">Create a job post first to start managing applicants.</p>
                            <a href="@Url.Action("Create", "JobPosts")" class="btn btn-primary">
                                <i class="bi bi-plus-circle me-2"></i>
                                Create Job Post
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-white border-end-0">
                                    <i class="bi bi-search text-muted"></i>
                                </span>
                                <input type="text" class="form-control border-start-0 table-search"
                                    placeholder="Search applicants by name, email, or phone...">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="btn-group w-100" role="group">
                                <input type="radio" class="btn-check" name="statusFilter" id="all" value="all" checked>
                                <label class="btn btn-outline-secondary" for="all">
                                    <i class="bi bi-list me-1"></i>All
                                </label>

                                <input type="radio" class="btn-check" name="statusFilter" id="pending" value="Pending">
                                <label class="btn btn-outline-warning" for="pending">
                                    <i class="bi bi-clock me-1"></i>Pending
                                </label>

                                <input type="radio" class="btn-check" name="statusFilter" id="screened" value="Screened">
                                <label class="btn btn-outline-info" for="screened">
                                    <i class="bi bi-check-circle me-1"></i>Screened
                                </label>

                                <input type="radio" class="btn-check" name="statusFilter" id="rejected" value="Rejected">
                                <label class="btn btn-outline-danger" for="rejected">
                                    <i class="bi bi-x-circle me-1"></i>Rejected
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Applicants Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-white border-0 py-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1 fw-bold text-dark">
                                <i class="bi bi-people text-primary me-2"></i>
                                Applicants
                            </h5>
                            <p class="text-muted mb-0">@(Model?.Applicants?.Count ?? 0) applicant(s) found</p>
                        </div>
                        <div class="d-flex align-items-center">
                            <span class="badge bg-warning me-2">@(Model?.Applicants?.Count(x => x.Status == "Pending") ?? 0)
                                Pending</span>
                            <span class="badge bg-info me-2">@(Model?.Applicants?.Count(x => x.Status == "Screened") ?? 0)
                                Screened</span>
                            <span class="badge bg-danger">@(Model?.Applicants?.Count(x => x.Status == "Rejected") ?? 0)
                                Rejected</span>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model?.Applicants != null && Model.Applicants.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="applicantsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th class="border-0 px-4 py-3">
                                            <input type="checkbox" id="selectAll" class="form-check-input">
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Name</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Email</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Phone</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Status</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Applied Date</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">CV Files</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Screening</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var applicant in Model.Applicants)
                                    {
                                        <tr class="border-bottom">
                                            <td class="px-4 py-3">
                                                <input type="checkbox" class="form-check-input applicant-checkbox"
                                                    value="@applicant.Id">
                                            </td>
                                            <td class="px-4 py-3">
                                                <div class="fw-bold text-dark">@applicant.FirstName @applicant.LastName</div>
                                            </td>
                                            <td class="px-4 py-3">
                                                <i class="bi bi-envelope text-muted me-1"></i>
                                                @applicant.Email
                                            </td>
                                            <td class="px-4 py-3 text-muted">
                                                <i class="bi bi-telephone me-1"></i>
                                                @(applicant.PhoneNumber ?? "N/A")
                                            </td>
                                            <td class="px-4 py-3">
                                                <span
                                                    class="badge @(applicant.Status == "Pending" ? "bg-warning" : applicant.Status == "Screened" ? "bg-info" : "bg-danger") px-3 py-2">
                                                    <i class="bi bi-circle-fill me-1" style="font-size: 0.5rem;"></i>
                                                    @applicant.Status
                                                </span>
                                            </td>
                                            <td class="px-4 py-3 text-muted">
                                                <i class="bi bi-calendar me-1"></i>
                                                @applicant.AppliedDate.ToString("MMM dd, yyyy")
                                            </td>
                                            <td class="px-4 py-3">
                                                <span class="badge bg-secondary px-3 py-2">
                                                    <i class="bi bi-file-earmark me-1"></i>
                                                    @applicant.CVFiles.Count
                                                </span>
                                            </td>
                                            <td class="px-4 py-3">
                                                @if (applicant.ScreeningResults.Any())
                                                {
                                                    <span class="badge bg-success px-3 py-2">
                                                        <i class="bi bi-check-circle me-1"></i>
                                                        @applicant.ScreeningResults.Count
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary px-3 py-2">
                                                        <i class="bi bi-dash-circle me-1"></i>
                                                        0
                                                    </span>
                                                }
                                            </td>
                                            <td class="px-4 py-3 text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "ApplicantsMvc", new { jobPostId = Model.SelectedJobPostId, id = applicant.Id })"
                                                        class="btn btn-outline-primary btn-sm me-1" data-bs-toggle="tooltip"
                                                        title="View Details">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", "ApplicantsMvc", new { jobPostId = Model.SelectedJobPostId, id = applicant.Id })"
                                                        class="btn btn-outline-warning btn-sm me-1" data-bs-toggle="tooltip"
                                                        title="Edit">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-outline-danger btn-sm"
                                                        data-bs-toggle="tooltip" title="Delete"
                                                        onclick="confirmDelete('@applicant.FirstName @applicant.LastName', () => deleteApplicant(@Model.SelectedJobPostId, @applicant.Id))">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="bi bi-people display-1 text-muted opacity-50"></i>
                            </div>
                            <h5 class="text-muted mb-3">No Applicants Found</h5>
                            <p class="text-muted mb-4">No applicants have applied for this job post yet.</p>
                            <a href="@Url.Action("Create", "ApplicantsMvc", new { jobPostId = Model.SelectedJobPostId })"
                                class="btn btn-primary">
                                <i class="bi bi-person-plus me-2"></i>
                                Add First Applicant
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- AI Screening Modal -->
<div class="modal fade" id="screeningModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-primary text-white border-0 py-4">
                <h5 class="modal-title fw-bold">
                    <i class="bi bi-search me-2"></i>
                    Start AI Screening
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form asp-controller="Applicants" asp-action="StartScreening" method="post">
                <input type="hidden" name="jobPostId" value="@Model.SelectedJobPostId" />
                <div class="modal-body p-4">
                    <div class="alert alert-info border-0 mb-4">
                        <i class="bi bi-info-circle me-2"></i>
                        <strong>AI Screening:</strong> Select applicants to analyze their CVs and qualifications using
                        our AI-powered screening system.
                    </div>
                    <h6 class="fw-bold text-dark mb-3">Selected Applicants:</h6>
                    <div id="selectedApplicants" class="mb-3">
                        <!-- Selected applicants will be populated here -->
                    </div>
                    <input type="hidden" name="ApplicantIds" id="applicantIds" />
                </div>
                <div class="modal-footer bg-light border-0 py-4">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle me-1"></i>
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-search me-1"></i>
                        Start AI Screening
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Form -->
<form id="deleteForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // Select all functionality
        document.getElementById('selectAll').addEventListener('change', function () {
            const checkboxes = document.querySelectorAll('.applicant-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });

        // Update selected applicants in modal
        function updateSelectedApplicants() {
            const selectedCheckboxes = document.querySelectorAll('.applicant-checkbox:checked');
            const selectedApplicantsDiv = document.getElementById('selectedApplicants');
            const applicantIdsInput = document.getElementById('applicantIds');

            let applicantIds = [];
            let html = '';

            selectedCheckboxes.forEach(checkbox => {
                const row = checkbox.closest('tr');
                const name = row.querySelector('td:nth-child(2)').textContent.trim();
                const email = row.querySelector('td:nth-child(3)').textContent.trim();

                applicantIds.push(checkbox.value);
                html += `<div class="alert alert-info alert-sm">
                                            <strong>${name}</strong><br>
                                            <small>${email}</small>
                                        </div>`;
            });

            selectedApplicantsDiv.innerHTML = html || '<p class="text-muted">No applicants selected</p>';
            applicantIdsInput.value = applicantIds.join(',');
        }

        // Add event listeners to checkboxes
        document.querySelectorAll('.applicant-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedApplicants);
        });

        // Update modal when opened
        document.getElementById('screeningModal').addEventListener('show.bs.modal', updateSelectedApplicants);

        // Filter by status
        document.querySelectorAll('input[name="statusFilter"]').forEach(radio => {
            radio.addEventListener('change', function () {
                const status = this.value;
                const rows = document.querySelectorAll('#applicantsTable tbody tr');

                rows.forEach(row => {
                    if (status === 'all') {
                        row.style.display = '';
                    } else {
                        const statusCell = row.querySelector('td:nth-child(5) .badge');
                        const cellStatus = statusCell ? statusCell.textContent.trim() : '';
                        row.style.display = cellStatus === status ? '' : 'none';
                    }
                });
            });
        });

        function deleteApplicant(jobPostId, applicantId) {
            const form = document.getElementById('deleteForm');
            form.action = '@Url.Action("Delete")/' + jobPostId + '/' + applicantId;
            form.submit();
        }

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}
