@using SmartCVFilter.Web.Models
@model List<JobPostListResponse>
@{
    ViewData["Title"] = "Job Posting Management";
    Layout = "_Layout";
}

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
            <div>
                <h1 class="h2 mb-1 text-dark">
                    <i class="bi bi-briefcase text-primary me-2"></i>
                    Job Posting Management
                </h1>
                <p class="text-muted mb-0">Manage and track all your job postings</p>
            </div>
            <div class="btn-toolbar mb-2 mb-md-0">
                <div class="btn-group me-2">
                    <a href="@Url.Action("Create")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-1"></i>
                        Create Job Post
                    </a>
                    <button type="button" class="btn btn-outline-secondary">
                        <i class="bi bi-download me-1"></i>
                        Export
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-body p-4">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="bi bi-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control border-start-0 table-search"
                                placeholder="Search job posts by title, location, or department...">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="btn-group w-100" role="group">
                            <input type="radio" class="btn-check" name="statusFilter" id="all" value="all" checked>
                            <label class="btn btn-outline-secondary" for="all">
                                <i class="bi bi-list me-1"></i>All
                            </label>

                            <input type="radio" class="btn-check" name="statusFilter" id="active" value="Active">
                            <label class="btn btn-outline-success" for="active">
                                <i class="bi bi-check-circle me-1"></i>Active
                            </label>

                            <input type="radio" class="btn-check" name="statusFilter" id="inactive" value="Inactive">
                            <label class="btn btn-outline-secondary" for="inactive">
                                <i class="bi bi-pause-circle me-1"></i>Inactive
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Job Posts Table -->
<div class="row">
    <div class="col-12">
        <div class="card shadow-lg border-0">
            <div class="card-header bg-white border-0 py-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="mb-1 fw-bold text-dark">
                            <i class="bi bi-briefcase text-primary me-2"></i>
                            Job Posts
                        </h5>
                        <p class="text-muted mb-0">@(Model?.Count ?? 0) job posting(s) found</p>
                    </div>
                    <div class="d-flex align-items-center">
                        <span class="badge bg-primary me-2">@(Model?.Count(x => x.Status == "Active") ?? 0)
                            Active</span>
                        <span class="badge bg-secondary">@(Model?.Count(x => x.Status == "Inactive") ?? 0)
                            Inactive</span>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model != null && Model.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="jobPostsTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Job Title</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Location</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Department</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Type</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Level</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Status</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Applicants</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Posted Date</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var jobPost in Model)
                                {
                                    <tr class="border-bottom">
                                        <td class="px-4 py-3">
                                            <div class="fw-bold text-dark">@jobPost.Title</div>
                                        </td>
                                        <td class="px-4 py-3">
                                            <i class="bi bi-geo-alt text-muted me-1"></i>
                                            @jobPost.Location
                                        </td>
                                        <td class="px-4 py-3">
                                            <span class="badge bg-light text-dark">@jobPost.Department</span>
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            @jobPost.EmploymentType
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            @jobPost.ExperienceLevel
                                        </td>
                                        <td class="px-4 py-3">
                                            <span
                                                class="badge @(jobPost.Status == "Active" ? "bg-success" : "bg-secondary") px-3 py-2">
                                                <i class="bi bi-circle-fill me-1" style="font-size: 0.5rem;"></i>
                                                @jobPost.Status
                                            </span>
                                        </td>
                                        <td class="px-4 py-3">
                                            <span class="badge bg-info px-3 py-2">
                                                <i class="bi bi-people me-1"></i>
                                                @jobPost.ApplicantCount
                                            </span>
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            <i class="bi bi-calendar me-1"></i>
                                            @jobPost.PostedDate.ToString("MMM dd, yyyy")
                                        </td>
                                        <td class="px-4 py-3 text-center">
                                            <div class="btn-group" role="group">
                                                <a href="@Url.Action("Details", new { id = jobPost.Id })"
                                                    class="btn btn-outline-primary btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a href="@Url.Action("Edit", new { id = jobPost.Id })"
                                                    class="btn btn-outline-warning btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a href="@Url.Action("Index", "Applicants", new { jobPostId = jobPost.Id })"
                                                    class="btn btn-outline-info btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="View Applicants">
                                                    <i class="bi bi-people"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                    data-bs-toggle="tooltip" title="Delete"
                                                    onclick="confirmDelete('@jobPost.Title', () => deleteJobPost(@jobPost.Id))">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <div class="mb-4">
                            <i class="bi bi-briefcase display-1 text-muted opacity-50"></i>
                        </div>
                        <h5 class="text-muted mb-3">No Job Posts Found</h5>
                        <p class="text-muted mb-4">Get started by creating your first job posting to attract qualified
                            candidates.</p>
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>
                            Create Your First Job Post
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Delete Form -->
<form id="deleteForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        function deleteJobPost(id) {
            const form = document.getElementById('deleteForm');
            form.action = '@Url.Action("Delete")/' + id;
            form.submit();
        }

        // Filter by status
        document.querySelectorAll('input[name="statusFilter"]').forEach(radio => {
            radio.addEventListener('change', function () {
                const status = this.value;
                const rows = document.querySelectorAll('#jobPostsTable tbody tr');

                rows.forEach(row => {
                    if (status === 'all') {
                        row.style.display = '';
                    } else {
                        const statusCell = row.querySelector('td:nth-child(6) .badge');
                        const cellStatus = statusCell ? statusCell.textContent.trim() : '';
                        row.style.display = cellStatus === status ? '' : 'none';
                    }
                });
            });
        });

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}
