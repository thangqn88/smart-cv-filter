@using SmartCVFilter.Web.Models
@model JobPostPagedViewModel
@{
    ViewData["Title"] = "Job Posting Management";
    Layout = "_Layout";
}

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
            <div>
                <h1 class="h2 mb-1 text-dark">
                    <i class="bi bi-briefcase text-primary me-2"></i>
                    Job Posting Management
                </h1>
                <p class="text-muted mb-0">Manage and track all your job postings</p>
            </div>
            <div class="btn-toolbar mb-2 mb-md-0">
                <div class="btn-group me-2">
                    <a href="@Url.Action("Create")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-1"></i>
                        Create Job Post
                    </a>
                    <button type="button" class="btn btn-outline-secondary">
                        <i class="bi bi-download me-1"></i>
                        Export
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-body p-4">
                <form id="filterForm" method="get" action="@Url.Action("Index")">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="search" class="form-label">Search</label>
                            <div class="input-group">
                                <span class="input-group-text bg-white border-end-0">
                                    <i class="bi bi-search text-muted"></i>
                                </span>
                                <input type="text" class="form-control border-start-0" id="search" name="search" 
                                       value="@Model.Filters.Search" placeholder="Search job posts...">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-select" id="status" name="status">
                                <option value="">All Status</option>
                                <option value="Active" @(Model.Filters.Status == "Active" ? "selected" : "")>Active</option>
                                <option value="Inactive" @(Model.Filters.Status == "Inactive" ? "selected" : "")>Inactive</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="department" class="form-label">Department</label>
                            <select class="form-select" id="department" name="department">
                                <option value="">All Departments</option>
                                @foreach (var dept in Model.Departments)
                                {
                                    <option value="@dept" @(Model.Filters.Department == dept ? "selected" : "")>@dept</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="location" class="form-label">Location</label>
                            <select class="form-select" id="location" name="location">
                                <option value="">All Locations</option>
                                @foreach (var loc in Model.Locations)
                                {
                                    <option value="@loc" @(Model.Filters.Location == loc ? "selected" : "")>@loc</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="employmentType" class="form-label">Type</label>
                            <select class="form-select" id="employmentType" name="employmentType">
                                <option value="">All Types</option>
                                @foreach (var type in Model.EmploymentTypes)
                                {
                                    <option value="@type" @(Model.Filters.EmploymentType == type ? "selected" : "")>@type</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-1">
                            <label for="pageSize" class="form-label">Per Page</label>
                            <select class="form-select" id="pageSize" name="pageSize">
                                @foreach (var size in new int[] { 5, 10, 25, 50, 100 })
                                {
                                    <option value="@size" @(Model.Filters.PageSize == size ? "selected" : "")>@size</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-search me-1"></i>
                                Apply Filters
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                Clear Filters
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Job Posts Table -->
<div class="row">
    <div class="col-12">
        <div class="card shadow-lg border-0">
            <div class="card-header bg-white border-0 py-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="mb-1 fw-bold text-dark">
                            <i class="bi bi-briefcase text-primary me-2"></i>
                            Job Posts
                        </h5>
                        <p class="text-muted mb-0">
                            Showing @Model.Pagination.StartItem-@Model.Pagination.EndItem of @Model.Pagination.TotalItems job posting(s)
                        </p>
                    </div>
                    <div class="d-flex align-items-center">
                        <span class="badge bg-primary me-2">@Model.Data.ActiveJobPosts Active</span>
                        <span class="badge bg-secondary me-2">@Model.Data.InactiveJobPosts Inactive</span>
                        <span class="badge bg-info">@Model.Data.TotalApplicants Total Applicants</span>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.Data.Items != null && Model.Data.Items.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="jobPostsTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("title")" class="text-decoration-none text-dark">
                                            Job Title
                                            @if (Model.Filters.SortBy == "title")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("location")" class="text-decoration-none text-dark">
                                            Location
                                            @if (Model.Filters.SortBy == "location")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("department")" class="text-decoration-none text-dark">
                                            Department
                                            @if (Model.Filters.SortBy == "department")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("employmenttype")" class="text-decoration-none text-dark">
                                            Type
                                            @if (Model.Filters.SortBy == "employmenttype")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("experiencelevel")" class="text-decoration-none text-dark">
                                            Level
                                            @if (Model.Filters.SortBy == "experiencelevel")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("status")" class="text-decoration-none text-dark">
                                            Status
                                            @if (Model.Filters.SortBy == "status")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">
                                        <a href="?@GetSortUrl("posteddate")" class="text-decoration-none text-dark">
                                            Posted Date
                                            @if (Model.Filters.SortBy == "posteddate")
                                            {
                                                <i class="bi bi-arrow-@(Model.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark">Applicants</th>
                                    <th class="border-0 px-4 py-3 fw-bold text-dark text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var jobPost in Model.Data.Items)
                                {
                                    <tr class="border-bottom">
                                        <td class="px-4 py-3">
                                            <div class="fw-bold text-dark">@jobPost.Title</div>
                                        </td>
                                        <td class="px-4 py-3">
                                            <i class="bi bi-geo-alt text-muted me-1"></i>
                                            @jobPost.Location
                                        </td>
                                        <td class="px-4 py-3">
                                            <span class="badge bg-light text-dark">@jobPost.Department</span>
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            @jobPost.EmploymentType
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            @jobPost.ExperienceLevel
                                        </td>
                                        <td class="px-4 py-3">
                                            <span
                                                class="badge @(jobPost.Status == "Active" ? "bg-success" : "bg-secondary") px-3 py-2">
                                                <i class="bi bi-circle-fill me-1" style="font-size: 0.5rem;"></i>
                                                @jobPost.Status
                                            </span>
                                        </td>
                                        <td class="px-4 py-3">
                                            <span class="badge bg-info px-3 py-2">
                                                <i class="bi bi-people me-1"></i>
                                                @jobPost.ApplicantCount
                                            </span>
                                        </td>
                                        <td class="px-4 py-3 text-muted">
                                            <i class="bi bi-calendar me-1"></i>
                                            @jobPost.PostedDate.ToString("MMM dd, yyyy")
                                        </td>
                                        <td class="px-4 py-3 text-center">
                                            <div class="btn-group" role="group">
                                                <a href="@Url.Action("Details", new { id = jobPost.Id })"
                                                    class="btn btn-outline-primary btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a href="@Url.Action("Edit", new { id = jobPost.Id })"
                                                    class="btn btn-outline-warning btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a href="@Url.Action("Index", "Applicants", new { jobPostId = jobPost.Id })"
                                                    class="btn btn-outline-info btn-sm me-1" data-bs-toggle="tooltip"
                                                    title="View Applicants">
                                                    <i class="bi bi-people"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                    data-bs-toggle="tooltip" title="Delete"
                                                    onclick="confirmDelete('@jobPost.Title', () => deleteJobPost(@jobPost.Id))">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    @if (Model.Pagination.TotalPages > 1)
                    {
                        <div class="card-footer bg-white border-0 py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="text-muted">
                                    Showing @Model.Pagination.StartItem-@Model.Pagination.EndItem of @Model.Pagination.TotalItems results
                                </div>
                                <nav aria-label="Job posts pagination">
                                    <ul class="pagination pagination-sm mb-0">
                                        @if (Model.Pagination.HasPreviousPage)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="?@GetPageUrl(Model.Pagination.PreviousPage.Value)">
                                                    <i class="bi bi-chevron-left"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">
                                                    <i class="bi bi-chevron-left"></i>
                                                </span>
                                            </li>
                                        }

                                        @{
                                            var startPage = Math.Max(1, Model.Pagination.CurrentPage - 2);
                                            var endPage = Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2);
                                        }

                                        @if (startPage > 1)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="?@GetPageUrl(1)">1</a>
                                            </li>
                                            @if (startPage > 2)
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">...</span>
                                                </li>
                                            }
                                        }

                                        @for (int i = startPage; i <= endPage; i++)
                                        {
                                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="?@GetPageUrl(i)">@i</a>
                                            </li>
                                        }

                                        @if (endPage < Model.Pagination.TotalPages)
                                        {
                                            @if (endPage < Model.Pagination.TotalPages - 1)
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">...</span>
                                                </li>
                                            }
                                            <li class="page-item">
                                                <a class="page-link" href="?@GetPageUrl(Model.Pagination.TotalPages)">@Model.Pagination.TotalPages</a>
                                            </li>
                                        }

                                        @if (Model.Pagination.HasNextPage)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="?@GetPageUrl(Model.Pagination.NextPage.Value)">
                                                    <i class="bi bi-chevron-right"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">
                                                    <i class="bi bi-chevron-right"></i>
                                                </span>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <div class="mb-4">
                            <i class="bi bi-briefcase display-1 text-muted opacity-50"></i>
                        </div>
                        <h5 class="text-muted mb-3">No Job Posts Found</h5>
                        <p class="text-muted mb-4">Get started by creating your first job posting to attract qualified candidates.</p>
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>
                            Create Your First Job Post
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Delete Form -->
<form id="deleteForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@functions {
    string GetPageUrl(int page)
    {
        var queryParams = new List<string>
        {
            $"page={page}",
            $"pageSize={Model.Filters.PageSize}",
            $"search={Model.Filters.Search}",
            $"status={Model.Filters.Status}",
            $"department={Model.Filters.Department}",
            $"location={Model.Filters.Location}",
            $"employmentType={Model.Filters.EmploymentType}",
            $"experienceLevel={Model.Filters.ExperienceLevel}",
            $"sortBy={Model.Filters.SortBy}",
            $"sortDirection={Model.Filters.SortDirection}"
        };
        return string.Join("&", queryParams.Where(p => !p.EndsWith("=") && !p.EndsWith("&")));
    }

    string GetSortUrl(string sortBy)
    {
        var queryParams = new List<string>
        {
            $"page=1",
            $"pageSize={Model.Filters.PageSize}",
            $"search={Model.Filters.Search}",
            $"status={Model.Filters.Status}",
            $"department={Model.Filters.Department}",
            $"location={Model.Filters.Location}",
            $"employmentType={Model.Filters.EmploymentType}",
            $"experienceLevel={Model.Filters.ExperienceLevel}",
            $"sortBy={sortBy}",
            $"sortDirection={(Model.Filters.SortBy == sortBy && Model.Filters.SortDirection == "asc" ? "desc" : "asc")}"
        };
        return string.Join("&", queryParams.Where(p => !p.EndsWith("=") && !p.EndsWith("&")));
    }
}

@section Scripts {
    <script>
        function deleteJobPost(id) {
            const form = document.getElementById('deleteForm');
            form.action = '@Url.Action("Delete")/' + id;
            form.submit();
        }

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Auto-submit form on filter change
        document.getElementById('pageSize').addEventListener('change', function() {
            document.getElementById('filterForm').submit();
        });
    </script>
}
