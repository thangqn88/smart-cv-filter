@using SmartCVFilter.Web.Models
@model dynamic
@{
    ViewData["Title"] = "Applicant Management";
    Layout = "_Layout";
}

@if (Model is ApplicantPagedViewModel pagedModel)
{
    <!-- Paged Applicants View -->
    <!-- Job Post Info and Action Buttons -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="text-muted mb-0">@pagedModel.JobPostTitle</h5>
                    <small class="text-muted">Manage and review candidate applications</small>
                </div>
                <div class="btn-group">
                    <a href="@Url.Action("Create", new { jobPostId = pagedModel.JobPostId })" class="btn btn-primary">
                        <i class="bi bi-person-plus me-1"></i>
                        Add Applicant
                    </a>
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#screeningModal">
                        <i class="bi bi-search me-1"></i>
                        Start AI Screening
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <form id="filterForm" method="get" action="@Url.Action("Index", new { jobPostId = pagedModel.JobPostId })">
                        <div class="row g-3">
                            <div class="col-md-3">
                                <label for="search" class="form-label">Search</label>
                                <div class="input-group">
                                    <span class="input-group-text bg-white border-end-0">
                                        <i class="bi bi-search text-muted"></i>
                                    </span>
                                    <input type="text" class="form-control border-start-0" id="search" name="search" 
                                           value="@pagedModel.Filters.Search" placeholder="Search applicants...">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status">
                                    <option value="">All Status</option>
                                    @foreach (var status in pagedModel.Statuses)
                                    {
                                        <option value="@status" @(pagedModel.Filters.Status == status ? "selected" : "")>@status</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label for="appliedFrom" class="form-label">Applied From</label>
                                <input type="date" class="form-control" id="appliedFrom" name="appliedFrom" 
                                       value="@pagedModel.Filters.AppliedFrom?.ToString("yyyy-MM-dd")">
                            </div>
                            <div class="col-md-2">
                                <label for="appliedTo" class="form-label">Applied To</label>
                                <input type="date" class="form-control" id="appliedTo" name="appliedTo" 
                                       value="@pagedModel.Filters.AppliedTo?.ToString("yyyy-MM-dd")">
                            </div>
                            <div class="col-md-2">
                                <label for="pageSize" class="form-label">Per Page</label>
                                <select class="form-select" id="pageSize" name="pageSize">
                                    @foreach (var size in new int[] { 5, 10, 25, 50, 100 })
                                    {
                                        <option value="@size" @(pagedModel.Filters.PageSize == size ? "selected" : "")>@size</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-1">
                                <label class="form-label">&nbsp;</label>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-12">
                                <a href="@Url.Action("Index", new { jobPostId = pagedModel.JobPostId })" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-clockwise me-1"></i>
                                    Clear Filters
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Applicants Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-white border-0 py-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1 fw-bold text-dark">
                                <i class="bi bi-people text-primary me-2"></i>
                                Applicants
                            </h5>
                            <p class="text-muted mb-0">
                                Showing @pagedModel.Pagination.StartItem-@pagedModel.Pagination.EndItem of @pagedModel.Pagination.TotalItems applicant(s)
                            </p>
                        </div>
                        <div class="d-flex align-items-center">
                            <span class="badge bg-warning me-2">@pagedModel.Data.PendingApplicants Pending</span>
                            <span class="badge bg-info me-2">@pagedModel.Data.ScreenedApplicants Screened</span>
                            <span class="badge bg-danger me-2">@pagedModel.Data.RejectedApplicants Rejected</span>
                            <span class="badge bg-secondary">@pagedModel.Data.TotalCVFiles CV Files</span>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (pagedModel.Data.Items != null && pagedModel.Data.Items.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="applicantsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">
                                            <input type="checkbox" class="form-check-input" id="selectAll">
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">
                                            <a href="?@GetSortUrl(pagedModel, "firstname")" class="text-decoration-none text-dark">
                                                Name
                                                @if (pagedModel.Filters.SortBy == "firstname")
                                                {
                                                    <i class="bi bi-arrow-@(pagedModel.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                                }
                                            </a>
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">
                                            <a href="?@GetSortUrl(pagedModel, "email")" class="text-decoration-none text-dark">
                                                Email
                                                @if (pagedModel.Filters.SortBy == "email")
                                                {
                                                    <i class="bi bi-arrow-@(pagedModel.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                                }
                                            </a>
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">Phone</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">
                                            <a href="?@GetSortUrl(pagedModel, "status")" class="text-decoration-none text-dark">
                                                Status
                                                @if (pagedModel.Filters.SortBy == "status")
                                                {
                                                    <i class="bi bi-arrow-@(pagedModel.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                                }
                                            </a>
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">
                                            <a href="?@GetSortUrl(pagedModel, "applieddate")" class="text-decoration-none text-dark">
                                                Applied Date
                                                @if (pagedModel.Filters.SortBy == "applieddate")
                                                {
                                                    <i class="bi bi-arrow-@(pagedModel.Filters.SortDirection == "asc" ? "up" : "down") ms-1"></i>
                                                }
                                            </a>
                                        </th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark">CV Files</th>
                                        <th class="border-0 px-4 py-3 fw-bold text-dark text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var applicant in pagedModel.Data.Items)
                                    {
                                        <tr class="border-bottom">
                                            <td class="px-4 py-3">
                                                <input type="checkbox" class="form-check-input applicant-checkbox" value="@applicant.Id">
                                            </td>
                                            <td class="px-4 py-3">
                                                <div class="fw-bold text-dark">@applicant.FirstName @applicant.LastName</div>
                                            </td>
                                            <td class="px-4 py-3">
                                                <i class="bi bi-envelope text-muted me-1"></i>
                                                @applicant.Email
                                            </td>
                                            <td class="px-4 py-3">
                                                <i class="bi bi-phone text-muted me-1"></i>
                                                @(applicant.PhoneNumber ?? "N/A")
                                            </td>
                                            <td class="px-4 py-3">
                                                <span class="badge @(applicant.Status == "Pending" ? "bg-warning" : applicant.Status == "Screened" ? "bg-info" : "bg-danger") px-3 py-2">
                                                    <i class="bi bi-circle-fill me-1" style="font-size: 0.5rem;"></i>
                                                    @applicant.Status
                                                </span>
                                            </td>
                                            <td class="px-4 py-3 text-muted">
                                                <i class="bi bi-calendar me-1"></i>
                                                @applicant.AppliedDate.ToString("MMM dd, yyyy")
                                            </td>
                                            <td class="px-4 py-3">
                                                <span class="badge bg-secondary px-3 py-2">
                                                    <i class="bi bi-file-earmark me-1"></i>
                                                    @applicant.CVFiles.Count
                                                </span>
                                            </td>
                                            <td class="px-4 py-3 text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", new { jobPostId = pagedModel.JobPostId, id = applicant.Id })"
                                                       class="btn btn-outline-primary btn-sm me-1" data-bs-toggle="tooltip"
                                                       title="View Details">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { jobPostId = pagedModel.JobPostId, id = applicant.Id })"
                                                       class="btn btn-outline-warning btn-sm me-1" data-bs-toggle="tooltip"
                                                       title="Edit">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-outline-danger btn-sm"
                                                            data-bs-toggle="tooltip" title="Delete"
                                                            onclick="confirmDelete('@applicant.FirstName @applicant.LastName', () => deleteApplicant(@applicant.Id))">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (pagedModel.Pagination.TotalPages > 1)
                        {
                            <div class="card-footer bg-white border-0 py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="text-muted">
                                        Showing @pagedModel.Pagination.StartItem-@pagedModel.Pagination.EndItem of @pagedModel.Pagination.TotalItems results
                                    </div>
                                    <nav aria-label="Applicants pagination">
                                        <ul class="pagination pagination-sm mb-0">
                                            @if (pagedModel.Pagination.HasPreviousPage)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="?@GetPageUrl(pagedModel, pagedModel.Pagination.PreviousPage!.Value)">
                                                        <i class="bi bi-chevron-left"></i>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">
                                                        <i class="bi bi-chevron-left"></i>
                                                    </span>
                                                </li>
                                            }

                                            @{
                                                var startPage = Math.Max(1, pagedModel.Pagination.CurrentPage - 2);
                                                var endPage = Math.Min(pagedModel.Pagination.TotalPages, pagedModel.Pagination.CurrentPage + 2);
                                            }

                                            @if (startPage > 1)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="?@GetPageUrl(pagedModel, 1)">1</a>
                                                </li>
                                                @if (startPage > 2)
                                                {
                                                    <li class="page-item disabled">
                                                        <span class="page-link">...</span>
                                                    </li>
                                                }
                                            }

                                            @for (int i = startPage; i <= endPage; i++)
                                            {
                                                <li class="page-item @(i == pagedModel.Pagination.CurrentPage ? "active" : "")">
                                                    <a class="page-link" href="?@GetPageUrl(pagedModel, i)">@i</a>
                                                </li>
                                            }

                                            @if (endPage < pagedModel.Pagination.TotalPages)
                                            {
                                                @if (endPage < pagedModel.Pagination.TotalPages - 1)
                                                {
                                                    <li class="page-item disabled">
                                                        <span class="page-link">...</span>
                                                    </li>
                                                }
                                                <li class="page-item">
                                                    <a class="page-link" href="?@GetPageUrl(pagedModel, pagedModel.Pagination.TotalPages)">@pagedModel.Pagination.TotalPages</a>
                                                </li>
                                            }

                                            @if (pagedModel.Pagination.HasNextPage)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="?@GetPageUrl(pagedModel, pagedModel.Pagination.NextPage!.Value)">
                                                        <i class="bi bi-chevron-right"></i>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">
                                                        <i class="bi bi-chevron-right"></i>
                                                    </span>
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="bi bi-people display-1 text-muted opacity-50"></i>
                            </div>
                            <h5 class="text-muted mb-3">No Applicants Found</h5>
                            <p class="text-muted mb-4">No applicants have applied for this job posting yet.</p>
                            <a href="@Url.Action("Create", new { jobPostId = pagedModel.JobPostId })" class="btn btn-primary">
                                <i class="bi bi-person-plus me-2"></i>
                                Add First Applicant
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Form -->
    <form id="deleteForm" method="post" style="display: none;">
        @Html.AntiForgeryToken()
    </form>

    @functions {
        string GetPageUrl(ApplicantPagedViewModel model, int page)
        {
            var queryParams = new List<string>
            {
                $"page={page}",
                $"pageSize={model.Filters.PageSize}",
                $"search={model.Filters.Search}",
                $"status={model.Filters.Status}",
                $"appliedFrom={model.Filters.AppliedFrom?.ToString("yyyy-MM-dd")}",
                $"appliedTo={model.Filters.AppliedTo?.ToString("yyyy-MM-dd")}",
                $"sortBy={model.Filters.SortBy}",
                $"sortDirection={model.Filters.SortDirection}"
            };
            return string.Join("&", queryParams.Where(p => !p.EndsWith("=") && !p.EndsWith("&")));
        }

        string GetSortUrl(ApplicantPagedViewModel model, string sortBy)
        {
            var queryParams = new List<string>
            {
                $"page=1",
                $"pageSize={model.Filters.PageSize}",
                $"search={model.Filters.Search}",
                $"status={model.Filters.Status}",
                $"appliedFrom={model.Filters.AppliedFrom?.ToString("yyyy-MM-dd")}",
                $"appliedTo={model.Filters.AppliedTo?.ToString("yyyy-MM-dd")}",
                $"sortBy={sortBy}",
                $"sortDirection={(model.Filters.SortBy == sortBy && model.Filters.SortDirection == "asc" ? "desc" : "asc")}"
            };
            return string.Join("&", queryParams.Where(p => !p.EndsWith("=") && !p.EndsWith("&")));
        }
    }

    @section Scripts {
        <script>
            function deleteApplicant(id) {
                const form = document.getElementById('deleteForm');
                form.action = '@Url.Action("Delete", new { jobPostId = pagedModel.JobPostId })' + '/' + id;
                form.submit();
            }

            // Select all functionality
            document.getElementById('selectAll').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.applicant-checkbox');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Auto-submit form on filter change
            document.getElementById('pageSize').addEventListener('change', function() {
                document.getElementById('filterForm').submit();
            });
        </script>
    }
}
else if (Model is SmartCVFilter.Web.ViewModels.ApplicantIndexViewModel selectionModel)
{
    <!-- Job Post Selection View -->

    <!-- Job Post Selection -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-white border-0 py-4">
                    <h5 class="mb-1 fw-bold text-dark">
                        <i class="bi bi-briefcase text-primary me-2"></i>
                        Select a Job Post
                    </h5>
                    <p class="text-muted mb-0">Choose a job posting to view and manage its applicants</p>
                </div>
                <div class="card-body p-4">
                    @if (selectionModel.JobPosts != null && selectionModel.JobPosts.Count > 0)
                    {
                        <div class="row g-3">
                            @foreach (var jobPost in selectionModel.JobPosts)
                            {
                                <div class="col-md-6 col-lg-4">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="card-body">
                                            <h6 class="card-title fw-bold text-dark">@jobPost.Title</h6>
                                            <p class="card-text text-muted small mb-2">
                                                <i class="bi bi-geo-alt me-1"></i>@jobPost.Location
                                            </p>
                                            <p class="card-text text-muted small mb-3">
                                                <i class="bi bi-building me-1"></i>@jobPost.Department
                                            </p>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span class="badge @(jobPost.Status == "Active" ? "bg-success" : "bg-secondary")">
                                                    @jobPost.Status
                                                </span>
                                                <a href="@Url.Action("Index", new { jobPostId = jobPost.Id })" class="btn btn-primary btn-sm">
                                                    <i class="bi bi-people me-1"></i>
                                                    View Applicants (@jobPost.ApplicantCount)
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="bi bi-briefcase display-1 text-muted opacity-50"></i>
                            </div>
                            <h5 class="text-muted mb-3">No Job Posts Found</h5>
                            <p class="text-muted mb-4">Create a job posting first to manage applicants.</p>
                            <a href="@Url.Action("Index", "JobPosts")" class="btn btn-primary">
                                <i class="bi bi-plus-circle me-2"></i>
                                Create Job Post
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger">
        <h4>Error</h4>
        <p>Unable to load applicant data. Please try again later.</p>
    </div>
}
